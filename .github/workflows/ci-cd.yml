name: Professional CI/CD Pipeline

on:
  # Trigger the CI job on pull requests targeting the 'master' branch
  pull_request:
    branches:
      - master

  # Trigger the CD job on pushes to the 'master' branch (i.e., after a PR is merged)
  push:
    branches:
      - master

jobs:
  # ===============================================
  # JOB 1: Continuous Integration (Runs on Pull Requests)
  # ===============================================
  ci-build-and-test:
    # This job only runs if the event is a 'pull_request'
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # We just build the images to ensure they don't have errors. We don't push them.
      - name: Build Backend image for validation
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: false

      - name: Build Frontend image for validation
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          file: ./frontend/Dockerfile.prod
          push: false

      # --- Placeholder for future tests ---
      # In a real project, you would uncomment and implement these steps.
      # - name: Run Backend Tests
      #   run: echo "Simulating running backend tests..."

      # - name: Run Frontend Tests
      #   run: echo "Simulating running frontend tests..."

  # =========================================================
  # JOB 2: Continuous Deployment (Runs on push to master)
  # =========================================================
  cd-build-and-push:
    # This job only runs if the event is a 'push' to the 'master' branch
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Backend image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/eld-trip-planner-backend:latest,${{ secrets.DOCKERHUB_USERNAME }}/eld-trip-planner-backend:${{ github.sha }}

      - name: Build and push Frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          file: ./frontend/Dockerfile.prod
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/eld-trip-planner-frontend:latest,${{ secrets.DOCKERHUB_USERNAME }}/eld-trip-planner-frontend:${{ github.sha }}
  # =========================================================
  # JOB3: Update Manifests in Git (The CD Trigger)
  # =========================================================
  update-manifests:
    # This job only runs on a push to master, AND it needs the build job to succeed first
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs: cd-build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          # We need a token to be able to push back to the repository
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Kustomize
        run: |
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | bash
          sudo mv kustomize /usr/local/bin/

      - name: Update Backend Image Tag
        run: |
          cd kubernetes/overlays/development
          kustomize edit set image yourusername/eld-trip-planner-backend=yourusername/eld-trip-planner-backend:${{ github.sha }}

      - name: Update Frontend Image Tag
        run: |
          cd kubernetes/overlays/development
          kustomize edit set image yourusername/eld-trip-planner-frontend=yourusername/eld-trip-planner-frontend:${{ github.sha }}

      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add kubernetes/overlays/development/kustomization.yaml
          # Check if there are any changes to commit
          if ! git diff --staged --quiet; then
            git commit -m "ci: Update image tags to ${{ github.sha }}"
            git push
          else
            echo "No image tag changes to commit."
          fi
